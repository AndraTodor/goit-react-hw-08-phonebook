{"version":3,"file":"static/js/30.56f8e0cf.chunk.js","mappings":"oNAOA,MA6FA,EA7FyBA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAQpBC,EAA+BC,EAAAA,KAAaC,MAAM,CACtDC,KAAMF,EAAAA,KACHG,SAAS,aACTC,IAAI,EAAG,cACPC,IAAI,GAAI,aACXC,MAAON,EAAAA,KAAaM,MAAM,iBAAiBH,SAAS,sBACpDI,SAAUP,EAAAA,KACPG,SAAS,yBACTC,IAAI,EAAG,+CACPC,IAAI,IAAK,+CAKd,OACEG,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAtBkB,CACpBR,KAAM,GACNI,MAAO,GACPC,SAAU,IAoBRI,SANqBC,IACvBlB,GAASmB,EAAAA,EAAAA,IAASD,GAAO,EAMvBE,iBAAkBf,EAA6BgB,UAE/CC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAU,8CAA6CH,SAAA,EAC3DC,EAAAA,EAAAA,MAAA,SAAOE,UAAU,QAAOH,SAAA,EACtBP,EAAAA,EAAAA,KAAA,QAAMU,UAAU,2BAA0BH,SAAC,qBAC3CP,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CACJC,KAAK,OACLlB,KAAK,OACLmB,YAAY,QACZH,UAAU,+CAEZV,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CACXpB,KAAK,OACLqB,UAAU,OACVL,UAAU,6BAIdF,EAAAA,EAAAA,MAAA,SAAOE,UAAU,QAAOH,SAAA,EACtBP,EAAAA,EAAAA,KAAA,QAAMU,UAAU,2BAA0BH,SAAC,WAC3CP,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CACJC,KAAK,OACLlB,KAAK,QACLmB,YAAY,yBACZH,UAAU,+CAEZV,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CACXpB,KAAK,QACLqB,UAAU,OACVL,UAAU,6BAIdF,EAAAA,EAAAA,MAAA,SAAOE,UAAU,QAAOH,SAAA,EACtBP,EAAAA,EAAAA,KAAA,QAAMU,UAAU,2BAA0BH,SAAC,cAC3CP,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CACJC,KAAK,WACLlB,KAAK,WACLmB,YAAY,sBACZH,UAAU,+CAEZV,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CACXpB,KAAK,WACLqB,UAAU,OACVL,UAAU,6BAIdV,EAAAA,EAAAA,KAAA,UACEY,KAAK,SACLF,UAAU,+EAA8EH,SACzF,YAIAnB,IACCoB,EAAAA,EAAAA,MAAA,KAAGE,UAAU,oBAAmBH,SAAA,CAAC,gCACDnB,SAI7B,ECtFb,EARyB4B,KAErBhB,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAV,UACEP,EAAAA,EAAAA,KAACf,EAAgB,K","sources":["components/RegistrationForm.jsx","pages/RegistrationPage.jsx"],"sourcesContent":["import { Field, Form, Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../redux/auth/operations';\nimport { selectAuthError } from '../redux/auth/selectors';\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectAuthError);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const RegisterFormValidationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Required!')\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!'),\n    email: Yup.string().email('Invalid email').required('Email is required!'),\n    password: Yup.string()\n      .required('Password is required!')\n      .min(8, 'Password must contain at least 8 characters')\n      .max(100, 'Password must be less than 100 characters'),\n  });\n  const handleFormSubmit = value => {\n    dispatch(register(value));\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleFormSubmit}\n      validationSchema={RegisterFormValidationSchema}\n    >\n      <Form className=\"space-y-6 bg-white p-6 shadow-md rounded-lg\">\n        <label className=\"block\">\n          <span className=\"block mb-1 text-gray-600\">Enter your name</span>\n          <Field\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Simon\"\n            className=\"w-full border border-gray-300 p-2 rounded\"\n          />\n          <ErrorMessage\n            name=\"name\"\n            component=\"span\"\n            className=\"text-red-500 text-sm\"\n          />\n        </label>\n\n        <label className=\"block\">\n          <span className=\"block mb-1 text-gray-600\">Email</span>\n          <Field\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"test.example@gmail.com\"\n            className=\"w-full border border-gray-300 p-2 rounded\"\n          />\n          <ErrorMessage\n            name=\"email\"\n            component=\"span\"\n            className=\"text-red-500 text-sm\"\n          />\n        </label>\n\n        <label className=\"block\">\n          <span className=\"block mb-1 text-gray-600\">Password</span>\n          <Field\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            className=\"w-full border border-gray-300 p-2 rounded\"\n          />\n          <ErrorMessage\n            name=\"password\"\n            component=\"span\"\n            className=\"text-red-500 text-sm\"\n          />\n        </label>\n\n        <button\n          type=\"submit\"\n          className=\"w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\n        >\n          Sign Up\n        </button>\n\n        {error && (\n          <p className=\"text-red-500 mt-3\">\n            Oops, some error occurred... {error}\n          </p>\n        )}\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from '../components/RegistrationForm';\n\nconst RegistrationPage = () => {\n  return (\n    <>\n      <RegistrationForm />\n    </>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["RegistrationForm","dispatch","useDispatch","error","useSelector","selectAuthError","RegisterFormValidationSchema","Yup","shape","name","required","min","max","email","password","_jsx","Formik","initialValues","onSubmit","value","register","validationSchema","children","_jsxs","Form","className","Field","type","placeholder","ErrorMessage","component","RegistrationPage","_Fragment"],"sourceRoot":""}