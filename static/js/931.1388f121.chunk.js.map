{"version":3,"file":"static/js/931.1388f121.chunk.js","mappings":"sNAOA,MAuEA,EAvEkBA,KAChB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAMpBC,EAA4BC,EAAAA,KAAaC,MAAM,CACnDC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,sBACpDC,SAAUJ,EAAAA,KACPG,SAAS,yBACTE,IAAI,EAAG,+CACPC,IAAI,IAAK,+CAKd,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAjBkB,CACpBP,MAAO,GACPE,SAAU,IAgBRM,SANqBC,IACvBjB,GAASkB,EAAAA,EAAAA,IAAMD,GAAO,EAMpBE,iBAAkBd,EAA0Be,UAE5CC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAU,8CAA6CH,SAAA,EAC3DC,EAAAA,EAAAA,MAAA,SAAOE,UAAU,QAAOH,SAAA,EACtBP,EAAAA,EAAAA,KAAA,QAAMU,UAAU,2BAA0BH,SAAC,WAC3CP,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CACJC,KAAK,OACLC,KAAK,QACLC,YAAY,yBACZJ,UAAU,+CAEZV,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CACXF,KAAK,QACLG,UAAU,OACVN,UAAU,6BAIdF,EAAAA,EAAAA,MAAA,SAAOE,UAAU,QAAOH,SAAA,EACtBP,EAAAA,EAAAA,KAAA,QAAMU,UAAU,2BAA0BH,SAAC,cAC3CP,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CACJC,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZJ,UAAU,+CAEZV,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CACXF,KAAK,WACLG,UAAU,OACVN,UAAU,6BAIdV,EAAAA,EAAAA,KAAA,UACEY,KAAK,SACLF,UAAU,wEAAuEH,SAClF,WAGAlB,IACCmB,EAAAA,EAAAA,MAAA,KAAGE,UAAU,oBAAmBH,SAAA,CAAC,gCACDlB,SAI7B,EChEb,QARA,WACE,OACEW,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAV,UACEP,EAAAA,EAAAA,KAACd,EAAS,KAGhB,C","sources":["components/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { Field, Form, Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../redux/auth/operations';\nimport { selectAuthError } from '../redux/auth/selectors';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectAuthError);\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const loginFormValidationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Email is required!'),\n    password: Yup.string()\n      .required('Password is required!')\n      .min(8, 'Password must contain at least 8 characters')\n      .max(100, 'Password must be less than 100 characters'),\n  });\n  const handleFormSubmit = value => {\n    dispatch(login(value));\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleFormSubmit}\n      validationSchema={loginFormValidationSchema}\n    >\n      <Form className=\"space-y-6 bg-white p-6 shadow-md rounded-lg\">\n        <label className=\"block\">\n          <span className=\"block mb-1 text-gray-600\">Email</span>\n          <Field\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"test.example@gmail.com\"\n            className=\"w-full border border-gray-300 p-2 rounded\"\n          />\n          <ErrorMessage\n            name=\"email\"\n            component=\"span\"\n            className=\"text-red-500 text-sm\"\n          />\n        </label>\n\n        <label className=\"block\">\n          <span className=\"block mb-1 text-gray-600\">Password</span>\n          <Field\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            className=\"w-full border border-gray-300 p-2 rounded\"\n          />\n          <ErrorMessage\n            name=\"password\"\n            component=\"span\"\n            className=\"text-red-500 text-sm\"\n          />\n        </label>\n\n        <button\n          type=\"submit\"\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\n        >\n          Log In\n        </button>\n        {error && (\n          <p className=\"text-red-500 mt-3\">\n            Oops, some error occurred... {error}\n          </p>\n        )}\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from '../components/LoginForm';\n\nfunction LoginPage() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n\nexport default LoginPage;\n"],"names":["LoginForm","dispatch","useDispatch","error","useSelector","selectAuthError","loginFormValidationSchema","Yup","shape","email","required","password","min","max","_jsx","Formik","initialValues","onSubmit","value","login","validationSchema","children","_jsxs","Form","className","Field","type","name","placeholder","ErrorMessage","component","_Fragment"],"sourceRoot":""}